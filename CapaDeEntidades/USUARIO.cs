//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDeEntidades
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Data;

    
    public partial class USUARIO
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public USUARIO()
        {
            this.FACTURA = new HashSet<FACTURA>();
        }
    
        public string NOMBRE { get; set; }
        public string APELLIDO { get; set; }
        public string TIPO_DOCUMENTO { get; set; }
        public string NUM_DOCUMENTO { get; set; }
        public string FECHA_NACIMIENTO { get; set; }
        public string GENERO { get; set; }
        public string EMAIL { get; set; }
        public string CONTRASENIA { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FACTURA> FACTURA { get; set; }


        //Insertar un usuario
        public bool InsertarUsuarioEF(string nombre, string apellido, string tipoDocumento, string nDocumento, string fechaNacimiento, string genero, string correo)
        {

            var bd= new VENTASEntities1();

            var nuevoUsuario = new USUARIO();
            nuevoUsuario.NOMBRE = nombre;
            nuevoUsuario.APELLIDO = apellido;
            nuevoUsuario.TIPO_DOCUMENTO = tipoDocumento;
            nuevoUsuario.NUM_DOCUMENTO = nDocumento;
            nuevoUsuario.FECHA_NACIMIENTO = fechaNacimiento;
            nuevoUsuario.GENERO = genero;

            bd.USUARIO.Add(nuevoUsuario);
            bd.SaveChanges();

            return true;
        }

        //Actualizar un usuario
         public bool ActualizarUsuarioEF(string nombre, string apellido, string tipoDocumento, string nDocumento, string fechaNacimiento, string genero, string correo)
        {
            var bd= new VENTASEntities1();
            var ususarioXActualizar = bd.USUARIO.FirstOrDefault(x => x.NUM_DOCUMENTO == nDocumento);
            if (ususarioXActualizar != null)
            {
                ususarioXActualizar.NOMBRE = nombre;
                ususarioXActualizar.APELLIDO = apellido;
                ususarioXActualizar.TIPO_DOCUMENTO = tipoDocumento;
                ususarioXActualizar.NUM_DOCUMENTO = nDocumento;
                ususarioXActualizar.FECHA_NACIMIENTO = fechaNacimiento;
                ususarioXActualizar.GENERO = genero;

                bd.SaveChanges();
                return true;
            }
            else
            {
                return false;
            }
        }

        //Eliminar un usuario
        public bool EliminarUsuarioEF(string nDocumento)
        {
            var bd = new VENTASEntities1();
            var usuarioXEliminar = bd.USUARIO.FirstOrDefault(x => x.NUM_DOCUMENTO == nDocumento);
            if (usuarioXEliminar != null)
            {
                bd.USUARIO.Remove(usuarioXEliminar);
                bd.SaveChanges();
                return true;
            }
            else
            {
                return false;
            }
        }

        public List<USUARIO>ListarUsuariosEF()
        {
            var baseDeDatos = new VENTASEntities1();

            var listadoDeUsuario = baseDeDatos.USUARIO.ToList();

            return listadoDeUsuario;
        }

        public DataTable ListarUsuarioDataTable()
        {
            var db = new VENTASEntities1();
            var listadoDeUsuario = db.USUARIO.ToList();
            var listadoDataTable = Convertir.ToDataTable(listadoDeUsuario);
            return listadoDataTable;
        }
    }
}
